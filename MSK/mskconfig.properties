# https://docs.aws.amazon.com/msk/latest/developerguide/msk-configuration-properties.html

# Maximum size of the log before deleting it.
#log.retention.bytes=

# Number of milliseconds to keep a log file before deleting it (in milliseconds).
# If not set, the value in log.retention.minutes is used.
#log.retention.ms=

# Number of minutes to keep a log file before deleting it, secondary to log.retention.ms property.
# If not set, the value in log.retention.hours is used.
#log.retention.minutes=

# Number of hours to keep a log file before deleting it, tertiary to the log.retention.ms property. Default 168 = 7 days
log.retention.hours=168

# The default cleanup policy for segments beyond the retention window. A comma-separated list of valid policies.
# Valid policies are delete and compact.
log.cleanup.policy=delete,compact

# How long are delete records retained? Default 86400000 ms = 24 hours
# The amount of time to retain delete tombstone markers for log compacted topics.
# This setting also gives a bound on the time in which a consumer must complete a read if they begin from offset 0
# to ensure that they get a valid snapshot of the final stage (otherwise delete tombstones may be collected before
# they complete their scan).
log.cleaner.delete.retention.ms=86400000

# Minimum ratio of dirty log to total log for a log to be eligible for cleaning.
# A higher ratio means fewer, more efficient cleanings, but it also means more wasted space in the log.
log.cleaner.min.cleanable.ratio=0.5

# Largest record batch size allowed by Kafka.
# If this is increased and there are consumers older than 0.10.2, the consumers' fetch size must also be increased so
# that the they can fetch record batches this large.
# In the latest message format version, records are always grouped into batches for efficiency.
# In previous message format versions, uncompressed records are not grouped into batches and this limit only applies
# to a single record in that case.
# This can be set per topic with the topic level max.message.bytes config.
message.max.bytes=1048588

# The number of threads that the server uses for receiving requests from the network and sending responses to it.
num.network.threads=3
